// Generated by view binder compiler. Do not edit!
package com.kylinxin.myweather.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kylinxin.myweather.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerWeatherSimpleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView simpleDelete;

  @NonNull
  public final ImageView simpleImg;

  @NonNull
  public final ConstraintLayout simpleLayout;

  @NonNull
  public final TextView simpleLocation;

  @NonNull
  public final TextView simpleStatus;

  @NonNull
  public final TextView simpleTemp;

  @NonNull
  public final TextView simpleTime;

  private RecyclerWeatherSimpleBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView simpleDelete, @NonNull ImageView simpleImg,
      @NonNull ConstraintLayout simpleLayout, @NonNull TextView simpleLocation,
      @NonNull TextView simpleStatus, @NonNull TextView simpleTemp, @NonNull TextView simpleTime) {
    this.rootView = rootView;
    this.simpleDelete = simpleDelete;
    this.simpleImg = simpleImg;
    this.simpleLayout = simpleLayout;
    this.simpleLocation = simpleLocation;
    this.simpleStatus = simpleStatus;
    this.simpleTemp = simpleTemp;
    this.simpleTime = simpleTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerWeatherSimpleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerWeatherSimpleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_weather_simple, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerWeatherSimpleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.simpleDelete;
      ImageView simpleDelete = ViewBindings.findChildViewById(rootView, id);
      if (simpleDelete == null) {
        break missingId;
      }

      id = R.id.simpleImg;
      ImageView simpleImg = ViewBindings.findChildViewById(rootView, id);
      if (simpleImg == null) {
        break missingId;
      }

      id = R.id.simpleLayout;
      ConstraintLayout simpleLayout = ViewBindings.findChildViewById(rootView, id);
      if (simpleLayout == null) {
        break missingId;
      }

      id = R.id.simpleLocation;
      TextView simpleLocation = ViewBindings.findChildViewById(rootView, id);
      if (simpleLocation == null) {
        break missingId;
      }

      id = R.id.simpleStatus;
      TextView simpleStatus = ViewBindings.findChildViewById(rootView, id);
      if (simpleStatus == null) {
        break missingId;
      }

      id = R.id.simpleTemp;
      TextView simpleTemp = ViewBindings.findChildViewById(rootView, id);
      if (simpleTemp == null) {
        break missingId;
      }

      id = R.id.simpleTime;
      TextView simpleTime = ViewBindings.findChildViewById(rootView, id);
      if (simpleTime == null) {
        break missingId;
      }

      return new RecyclerWeatherSimpleBinding((LinearLayout) rootView, simpleDelete, simpleImg,
          simpleLayout, simpleLocation, simpleStatus, simpleTemp, simpleTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
